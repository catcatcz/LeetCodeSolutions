class Solution {
public:
   vector<vector<int> > threeSum(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        vector<vector<int>> ret;
        set<vector<int>> ret_set;
       int i=1;
        while(i< nums.size()){
            if(i==1 or nums[i-1] != nums[i-2]){
            vector<vector<int> >ret_temp = twoSum(nums, i, nums.size()-1, -nums[i-1] );
            for(auto it: ret_temp){
                vector<int> s(1, nums[i-1]);
                s.push_back(it[0]);
                s.push_back(it[1]);
                ret_set.insert(s);
            }
            }
            i++;
        }
       for(auto it: ret_set){
           ret.push_back(it);
       }
       return ret;
   }
    vector<vector<int> > twoSum(vector<int>& nums, int begin, int end, int target){
        //cout<<"inside two sum"<<endl;
        int n1 = begin; int n2 = end;
        vector<vector<int>> ret;
        while(n1>= begin && n2<=end && n1<n2){
            //cout<<"nums[n1]="<<nums[n1]<<", nums[n2]="<<nums[n2]<<";target="<<target<<endl;
            if(nums[n1] + nums[n2] == target){
                ret.push_back(vector<int>{nums[n1], nums[n2]});
                n1++;n2--;
            }
            else if(nums[n1] + nums[n2] < target){
                n1++;
            }
            else {
                n2--;
            }
        }
        return ret;
    }

};
