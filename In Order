/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
       vector<int> inorderTraversal(TreeNode *root) {
        vector<int> inorder_vector;
        stack<TreeNode*> inorder_stack;
        if(root!=NULL)
        {   
                TreeNode *t_now=root;
                while(t_now || !inorder_stack.empty())
                {if(t_now!=NULL)
                {inorder_stack.push(t_now);t_now=t_now->left;}
                else if(t_now==NULL)
                {   
                if(!inorder_stack.empty()) 
                {   
                t_now=inorder_stack.top();
                inorder_vector.push_back(t_now->val);
                inorder_stack.pop();
                t_now=t_now->right;
                }   
                }}  
        }   
        return inorder_vector;
       }   
};
