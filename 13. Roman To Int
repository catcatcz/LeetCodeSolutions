    static const  unordered_map<string, int> RToI_num = { \ 
   {"I", 1}, {"V", 5}, {"X", 10}, {"L", 50}, {"C", 100}, {"D", 500}, {"M", 1000},  \
   {"IV", 4}, {"IX", 9}, {"XL", 40}, {"XC", 90}, {"CD", 400}, {"CM", 900}, \
    {"II", 2}, {"III", 3}, {"VI", 6}, {"VII", 7}, {"VIII", 8},\
    {"XX",20}, {"XXX", 30}, {"LX", 60}, {"LXX", 70}, {"LXXX", 80},\
    {"CC", 200}, {"CCC", 300},{"DC", 600}, {"DCC", 700}, {"DCCC", 800},\
    {"MM", 2000}, {"MMM", 3000}
   };  
class Solution {
public:
    int romanToInt(string s) {
        size_t try_size=s.size() < 4? s.size(): 4;
        while(try_size > 0){ 
            string key = s.substr(0, try_size);
            if(RToI_num.find(key) != RToI_num.end()){
                auto value = RToI_num.at(key);
                string rest = s.substr(try_size, s.size());
                return value + romanToInt(rest);
            }   
            try_size -= 1;
        }   
        return 0;
    }   
};
