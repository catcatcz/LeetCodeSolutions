class Solution {
public:
    bool isRectangleCover(vector<vector<int>>& rectangles) {
        int xini= numeric_limits<int>::max();int yini = xini;
        int xend= numeric_limits<int>::min();int yend = xend;
        for(const auto&bbox: rectangles){
            xini = min(xini, bbox[0]);
            yini = min(yini, bbox[1]);
            xend = max(xend, bbox[2]);
            yend = max(yend, bbox[3]);
        }   
        int ny = yend - yini; int nx = xend - xini; 
        vector<vector<int>> matrix(nx, vector<int>(ny, 0));
        for(const auto& bbox: rectangles){
            for(int ix=bbox[0]-xini; ix< bbox[2]-xini; ix++){
                for(int iy=bbox[1]-yini; iy< bbox[3]-yini; iy++){
                    matrix[ix][iy] +=1;
                    if(matrix[ix][iy] > 1) {return false;}
                }   
            }   
        }   
        
        for(int ix=0; ix< nx; ix++){
            for(int iy=0; iy< ny; iy++){
                if(matrix[ix][iy] == 0) {cout<<ix<<","<<iy<<endl;return false;}
            }   
        }   
        return true;
    }   
};
