#include<iostream>
using namespace std;
struct TreeNode {
    int val;
      TreeNode *left;
      TreeNode *right;
      TreeNode(int x) : val(x), left(NULL), right(NULL) {}
  };

 bool CheckMirror(TreeNode *left_root, TreeNode *right_root)
{
        if(left_root==NULL && right_root==NULL) {return true;}
        else if(left_root!=NULL && right_root==NULL) {return false;}
        else if(left_root==NULL && right_root!=NULL) {return false;}
        else if(left_root!=NULL && right_root!=NULL)
        {
            return ((left_root->val==right_root->val)&& CheckMirror(left_root->left, right_root->right) && CheckMirror(left_root->right,right_root->left));
        }
}
bool isSymmetric(TreeNode *root) {
        bool temp_sym;
        if(root==NULL) {return true;}
        else if(root!=NULL)
        {return CheckMirror(root->left, root->right);}
    }


int main()
{
TreeNode *root=new TreeNode(1);

}
