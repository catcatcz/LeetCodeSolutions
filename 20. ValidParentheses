class Solution {
public:
    bool isValid(string s) {
            if(s.length()/2*2!=s.length()) {return false;}
        stack<char> stack_S;
        char lefts[]={'(','{','['};
        char rights[]={')','}',']'};
        if(s[0]==rights[0] || s[0]==rights[1] || s[0]==rights[2]) {return false;}
        stack_S.push(s[0]);
        for(int i=1; i< s.length(); i++)
        {   
        bool p0,p1,p2;
        if(!stack_S.empty())
        {   
        char t=stack_S.top();
        char now=s[i];
        p0=(t==lefts[0] && now==rights[0]);
        p1=(t==lefts[1] && now==rights[1]);
        p2=(t==lefts[2] && now==rights[2]);
        if(p0==true || p1==true || p2==true) {stack_S.pop();}
        else if(now==lefts[0] || now==lefts[1] || now==lefts[2]) {stack_S.push(now);}
        else {return false;}
        }   
        else
        {if(s[i]==rights[0] || s[i]==rights[1] || s[i]==rights[2]) {return false;}
        else {stack_S.push(s[i]);}}
        }   
         if(stack_S.empty())
        {return true;}
        else{return false;}

    }   
};

