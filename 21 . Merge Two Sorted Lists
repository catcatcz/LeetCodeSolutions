/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *mergeTwoLists(ListNode *l1, ListNode *l2) {
          ListNode *list_big;
        ListNode *p, *p0,*p1, *p2;
        p1=l1;
        p2=l2;
        if(l1!=NULL && l2!=NULL)
        {
        list_big=new ListNode(1);
        p=list_big;
        while(p1!=NULL && p2!=NULL)
        {   
                if(p1->val > p2->val)
                {p->next = new ListNode(p2->val); p2=p2->next;p=p->next;}
                else
                {p->next = new ListNode(p1->val); p1=p1->next;p=p->next;}
        }   
        if(p1==NULL && p2!=NULL ) {p->next=p2;}
        else if(p1!=NULL && p2==NULL){p->next=p1;}
        list_big=list_big->next;
        return list_big;
        }
        else if(l1==NULL && l2!=NULL) {return l2;}
        else if(l1!=NULL && l2==NULL) {return l1;}
        else {return NULL;}
    }
};
