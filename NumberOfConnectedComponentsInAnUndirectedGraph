#include <iostream>
#include <vector>
#include <map>
#include <set>
using namespace std;
 
class Solution {
public:
    int countComponents(int n, vector<pair<int, int> >& edges) {
        //check input validity
        //corner case
        if(edges.size() ==0) {return n;} 
        //actual code
        if(n ==0) {return 1;} 
        vector<int> roots(n,0);
        for(size_t i=0; i< n; i++){roots[i]=i;}
        int count =n; 
        for(int i=0; i< edges.size(); i++){
            int f1 = edges[i].first;
            int f2 = edges[i].second;
            int root1 = findSet(roots, f1);
            int root2 = findSet(roots, f2);
            if(root1 != root2) {
                roots[root1] = roots[root2];
                count--;
            }   
        }   
        return count;
    }   
    int findSet(vector<int>& roots, int i) {
        if(roots[i] == i) {return i;} 
        roots[i] = findSet(roots, roots[i]);
        return roots[i];
    }   
    
};

