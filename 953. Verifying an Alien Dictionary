class Solution {
public:
    bool isAlienSorted(vector<string>& words, string order) {
        for(size_t i=0; i< order.size(); i++) {
            amap[order[i]] = i;
        }   
        for(size_t i=0; i< words.size()-1; i++){
            if(compare_words(words[i], words[i+1]) == false) {return false;}
        }   
        return true;
    }   
    bool compare_words(const string& w1, const string& w2) {
        size_t i=0;
        while(i < min(w1.size(), w2.size())){
            if(w1[i] == w2[i]) {i++;}
            else {
                if(amap[w1[i]] < amap[w2[i]]) {return true;}
                else {return false;}
            }   
        }   
        if(w1.size() > w2.size()) {return false;}
        else {return true;}

    }   
private:
   unordered_map<char, int> amap; 
};

