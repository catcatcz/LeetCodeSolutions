#include<iostream>
using namespace std;
 int FindSearch(int A[], int n, int target, int begin, int end)
    {
            int mid=(begin+end)/2;
            if(begin==end) {return begin;}
            else if(begin<end)
            {
                if(A[begin]<=target && target <=A[mid])
                {return FindSearch(A,n,target, begin, mid);}
                else if(target<=A[begin] && target<=A[end])
                {return FindSearch(A,n,target, mid, end);}
		else if(target<A[begin])
		{return 0;}
            }
    }
    int searchInsert(int A[], int n, int target) {
	if(target<A[0]) {return 0;}
	else if(target>A[n-1]) {return n-1;}
	else
        {if(n==0) {return 0;}
        else if(n>0)
        {return FindSearch(A,n,target, 0, n-1);}}
    }
int main()
{int a[2]={1,3};
int target=0;
int index=searchInsert(a,2,target);
cout<<"index="<<index<<endl;}
